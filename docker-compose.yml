services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: unless-stopped
    networks:
      - spark-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    restart: unless-stopped
    networks:
      - spark-net

  kafka-client:
    build:
      context: .
      dockerfile: ./src/kafka/Dockerfile
    container_name: kafka-client
    environment:
      KAFKA_BROKER: "kafka:9092"
    depends_on:
      - kafka
    restart: unless-stopped
    networks:
      - spark-net

  spark-master:
    image: bitnami/spark:3.5.0
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - .:/opt/spark/work-dir
      - ./data:/data
    networks:
      - spark-net

  spark-worker-1:
    image: bitnami/spark:3.5.0
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=3G
      - SPARK_WORKER_CORES=2
    depends_on:
      - spark-master
    volumes:
      - ./src/model:/src/model
      - ./data:/data
      - ./src/spark/requirements.txt:/requirements.txt
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt && \
               /opt/bitnami/spark/sbin/start-worker.sh spark://spark-master:7077"
    networks:
      - spark-net

  spark-worker-2:
    image: bitnami/spark:3.5.0
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=3G
      - SPARK_WORKER_CORES=2
    depends_on:
      - spark-master
    volumes:
      - ./src/model:/src/model
      - ./data:/data
      - ./src/spark/requirements.txt:/requirements.txt
    command: >
      bash -c "pip install --no-cache-dir -r /requirements.txt && \
               /opt/bitnami/spark/sbin/start-worker.sh spark://spark-master:7077"
    networks:
      - spark-net

  spark-streaming:
    build:
      context: .
      dockerfile: ./src/spark/Dockerfile
    container_name: spark-streaming
    depends_on:
      - kafka
      - spark-master
    volumes:
      - ./src/model:/src/model
      - ./data:/data
      - ./src/spark:/app
    deploy:
      resources:
        limits:
          memory: 6g
    networks:
      - spark-net

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: streaming
    ports:
      - "5432:5432"
    volumes:
      - ./src/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - spark-net

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: streamlit
    depends_on:
      - postgres
      - spark-streaming
    ports:
      - "8501:8501"
    environment:
      - POSTGRES_HOST=postgres
    networks:
      - spark-net

volumes:
  postgres_data:

networks:
  spark-net:
    driver: bridge